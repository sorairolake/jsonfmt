name: CD

on:
  push:
    branches:
      - develop
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-linux
          - x86_64-darwin
          - x86_64-windows
        include:
          - target: x86_64-linux
            os: ubuntu-20.04
          - target: x86_64-darwin
            os: macos-11
          - target: x86_64-windows
            os: windows-2022
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Go environment
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.18'
        cache: true
    - name: Build a package
      run: go build -ldflags '-s -w' ./cmd/jsonfmt
    - name: Get version
      id: get_version
      uses: battila7/get-version-action@v2.2.1
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
    - name: Install Asciidoctor
      run: |
        gem install asciidoctor
        asciidoctor -V
    - name: Build man pages
      run: |
        mkdir -p build
        asciidoctor -b manpage -a "revnumber=${{ steps.get_version.outputs.version-without-v }}" -D build doc/man/man1/*.adoc
    - name: Create a package
      shell: bash
      run: |
        if [ "${{ matrix.os }}" != "windows-2022" ] ; then
          bin="jsonfmt"
        else
          bin="jsonfmt.exe"
        fi
        package="jsonfmt-${{ steps.get_version.outputs.version }}-${{ matrix.target }}"

        mkdir -p "${package}"/{doc,man}
        cp README.md COPYRIGHT LICENSE-APACHE LICENSE-MIT "${bin}" "${package}"
        cp {AUTHORS,BUILD,CHANGELOG,CONTRIBUTING}.adoc "${package}"/doc
        cp build/* "${package}"/man

        if [ "${{ matrix.os }}" != "windows-2022" ] ; then
          tar czvf "${package}.tar.gz" "${package}"
        else
          7z a -bb "${package}.zip" "${package}"
        fi
    - name: Release
      uses: softprops/action-gh-release@v0.1.14
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        files: 'jsonfmt-*'
        name: "Release version ${{ steps.get_version.outputs.version-without-v }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
